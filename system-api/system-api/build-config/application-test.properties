# ===============================
# = ENVIRONMENT
# ===============================
env=test
spring.application.name= SYSTEM API

# ===============================
# = LOGGING
# ===============================
# Logging Configuration
logging.level.org.springframework.web=ERROR
logging.level.com.caista.birapps=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.apache.kafka=ERROR
logging.file=logs/application-${env}.log

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url = jdbc:oracle:thin:@//CORP-MSC-VM21.caimsc.compaid.com:1521/ETISDB1
spring.datasource.username = QA_KEYCLOAK
spring.datasource.password = QA_KEYCLOAK123!
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimumIdle=0
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

# HikariCP settings
# spring.datasource.hikari.*
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5

# Set here configurations for the database connection
## Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = MYBATIS
# ===============================
mybatis.config-location=classpath:mybatis-config.xml

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto= none

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

# ===============================
# = SERVER
# ===============================
# Application Server Configuration
server.port=80
server.servlet.context-path=/system

management.security.enabled: false

security.ignored=/**
spring.security.enabled=false
security.basic.enabled=false

server.max-http-header-size=10000000
